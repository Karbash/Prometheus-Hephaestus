{
  "openapi": "3.0.4",
  "info": {
    "title": "Hephaestus API",
    "description": "API para gerenciamento de pedidos.",
    "version": "v1"
  },
  "paths": {
    "/api/Additional": {
      "post": {
        "tags": [
          "Additional"
        ],
        "summary": "Cria um novo adicional para o tenant autenticado.",
        "description": "Requer **Role: Tenant**.\r\n\r\nExemplo de requisição:\r\n```json\r\n{\r\n  \"name\": \"Bacon Crocante\",\r\n  \"description\": \"Fatias crocantes de bacon\",\r\n  \"price\": 4.99,\r\n  \"isAvailable\": true\r\n}\r\n```\r\n\r\nExemplo de resposta de sucesso (Status 201 Created):\r\n```json\r\n{\r\n  \"id\": \"123e4567-e89b-12d3-a456-426614174001\"\r\n}\r\n```\r\n\r\nExemplo de erro de validação (Status 400 Bad Request):\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7231#section-6.5.1](https://tools.ietf.org/html/rfc7231#section-6.5.1)\",\r\n  \"title\": \"One or more validation errors occurred.\",\r\n  \"status\": 400,\r\n  \"errors\": {\r\n    \"Name\": [\r\n      \"O campo 'Name' é obrigatório.\"\r\n    ]\r\n  }\r\n}\r\n```",
        "requestBody": {
          "description": "Dados do adicional a ser criado.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAdditionalRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAdditionalRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAdditionalRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": { }
              },
              "application/json": {
                "schema": { }
              },
              "text/json": {
                "schema": { }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": [
          "Additional"
        ],
        "summary": "Lista todos os adicionais pertencentes ao tenant autenticado.",
        "description": "Requer **Role: Tenant**.\r\n\r\nExemplo de resposta de sucesso (Status 200 OK):\r\n```json\r\n[\r\n  {\r\n    \"id\": \"123e4567-e89b-12d3-a456-426614174001\",\r\n    \"tenantId\": \"456e7890-e89b-12d3-a456-426614174002\",\r\n    \"name\": \"Queijo Extra\",\r\n    \"description\": \"Adicional de queijo\",\r\n    \"price\": 3.50,\r\n    \"isAvailable\": true\r\n  },\r\n  {\r\n    \"id\": \"a7b8c9d0-e1f2-3g4h-5i6j-7k8l9m0n1o2p\",\r\n    \"tenantId\": \"456e7890-e89b-12d3-a456-426614174002\",\r\n    \"name\": \"Borda Recheada\",\r\n    \"description\": \"Borda com cheddar e catupiry\",\r\n    \"price\": 8.00,\r\n    \"isAvailable\": false\r\n  }\r\n]\r\n```",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AdditionalResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AdditionalResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AdditionalResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Additional/{id}": {
      "get": {
        "tags": [
          "Additional"
        ],
        "summary": "Obtém os detalhes de um adicional específico pelo seu ID.",
        "description": "Requer **Role: Tenant**. O adicional deve pertencer ao tenant autenticado.\r\n\r\nExemplo de resposta de sucesso (Status 200 OK):\r\n```json\r\n{\r\n  \"id\": \"123e4567-e89b-12d3-a456-426614174001\",\r\n  \"tenantId\": \"456e7890-e89b-12d3-a456-426614174002\",\r\n  \"name\": \"Queijo Extra\",\r\n  \"description\": \"Adicional de queijo\",\r\n  \"price\": 3.50,\r\n  \"isAvailable\": true\r\n}\r\n```\r\n\r\nExemplo de erro (Status 404 Not Found):\r\n```json\r\n{\r\n  \"message\": \"Adicional com ID 'xyz' não encontrado para o tenant.\"\r\n}\r\n```",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do adicional (GUID).",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Additional"
        ],
        "summary": "Atualiza as informações de um adicional existente.",
        "description": "Requer **Role: Tenant**. O adicional deve pertencer ao tenant autenticado.\r\n\r\nExemplo de requisição:\r\n```json\r\n{\r\n  \"name\": \"Bacon Premium\",\r\n  \"description\": \"Fatias de bacon artesanal\",\r\n  \"price\": 6.50,\r\n  \"isAvailable\": true\r\n}\r\n```\r\n\r\nExemplo de resposta de sucesso (Status 204 No Content):\r\n```\r\n(Nenhum corpo de resposta)\r\n```\r\n\r\nExemplo de erro (Status 404 Not Found):\r\n```json\r\n{\r\n  \"message\": \"Adicional com ID 'xyz' não encontrado para o tenant.\"\r\n}\r\n```",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do adicional a ser atualizado (GUID).",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Dados atualizados do adicional.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAdditionalRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAdditionalRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAdditionalRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Additional"
        ],
        "summary": "Remove um adicional existente.",
        "description": "Requer **Role: Tenant**. O adicional deve pertencer ao tenant autenticado.\r\n\r\nExemplo de resposta de sucesso (Status 204 No Content):\r\n```\r\n(Nenhum corpo de resposta)\r\n```\r\n\r\nExemplo de erro (Status 404 Not Found):\r\n```json\r\n{\r\n  \"message\": \"Adicional com ID 'xyz' não encontrado para o tenant.\"\r\n}\r\n```",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do adicional a ser removido (GUID).",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Administration/company": {
      "get": {
        "tags": [
          "Administration"
        ],
        "summary": "Lista todas as empresas registradas no sistema, com opções de filtro e paginação.",
        "description": "Requer **Role: Admin** e **MFA validado**.\r\n\r\nExemplo de resposta de sucesso (Status 200 OK):\r\n```json\r\n{\r\n  \"items\": [\r\n    {\r\n      \"id\": \"123e4567-e89b-12d3-a456-426614174001\",\r\n      \"name\": \"Empresa Exemplo\",\r\n      \"email\": \"exemplo@empresa.com\",\r\n      \"phoneNumber\": \"123456789\",\r\n      \"isEnabled\": true,\r\n      \"feeType\": \"Percentage\",\r\n      \"feeValue\": 5.0,\r\n      \"city\": \"São Paulo\",\r\n      \"neighborhood\": \"Vila Mariana\",\r\n      \"street\": \"Rua Exemplo\",\r\n      \"number\": \"123\",\r\n      \"latitude\": -23.550520,\r\n      \"longitude\": -46.633308,\r\n      \"slogan\": \"O melhor da cidade!\",\r\n      \"description\": \"Descrição da empresa.\"\r\n    }\r\n  ],\r\n  \"totalCount\": 1,\r\n  \"pageNumber\": 1,\r\n  \"pageSize\": 20\r\n}\r\n```",
        "parameters": [
          {
            "name": "isEnabled",
            "in": "query",
            "description": "Filtro opcional para empresas habilitadas (true) ou desabilitadas (false).",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Número da página a ser retornada (padrão: 1).",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Número de itens por página (padrão: 20).",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyResponsePagedResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyResponsePagedResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyResponsePagedResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Administration/company/{id}": {
      "put": {
        "tags": [
          "Administration"
        ],
        "summary": "Atualiza as informações de uma empresa específica.",
        "description": "Requer **Role: Admin** e **MFA validado**.\r\nO `id` na URL deve corresponder ao `Id` no corpo da requisição.\r\n\r\nExemplo de requisição:\r\n```json\r\n{\r\n  \"id\": \"123e4567-e89b-12d3-a456-426614174001\",\r\n  \"name\": \"Empresa Atualizada Ltda.\",\r\n  \"email\": \"contato_novo@empresa.com\",\r\n  \"phoneNumber\": \"998877665\",\r\n  \"apiKey\": \"nova_api_key_xyz\",\r\n  \"feeType\": \"Fixed\",\r\n  \"feeValue\": 2.50,\r\n  \"isEnabled\": true,\r\n  \"city\": \"Rio de Janeiro\",\r\n  \"neighborhood\": \"Botafogo\",\r\n  \"street\": \"Rua Exemplo Nova\",\r\n  \"number\": \"456\",\r\n  \"latitude\": -22.951916,\r\n  \"longitude\": -43.210487,\r\n  \"slogan\": \"Inovação a cada passo!\",\r\n  \"description\": \"Empresa líder em tecnologia.\"\r\n}\r\n```\r\n\r\nExemplo de resposta de sucesso (Status 204 No Content):\r\n```\r\n(Nenhum corpo de resposta)\r\n```\r\n\r\nExemplo de erro (Status 404 Not Found):\r\n```json\r\n{\r\n  \"message\": \"Empresa com ID 'xyz' não encontrada.\"\r\n}\r\n```",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da empresa a ser atualizada (GUID).",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Objeto com os dados atualizados da empresa.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCompanyRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCompanyRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCompanyRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Administration/sales/admin": {
      "get": {
        "tags": [
          "Administration"
        ],
        "summary": "Gera um relatório consolidado de vendas de todas as empresas, com filtros opcionais por data.",
        "description": "Requer **Role: Admin** e **MFA validado**.\r\nAs datas devem estar no formato ISO 8601 (ex: `2024-01-01`).\r\n\r\nExemplo de resposta de sucesso (Status 200 OK):\r\n```json\r\n{\r\n  \"totalSales\": 1000.00,\r\n  \"totalTransactions\": 50,\r\n  \"averageTicket\": 20.00,\r\n  \"byCompany\": [\r\n    {\r\n      \"companyId\": \"123e4567-e89b-12d3-a456-426614174001\",\r\n      \"companyName\": \"Empresa Exemplo\",\r\n      \"totalSales\": 500.00,\r\n      \"totalTransactions\": 25\r\n    },\r\n    {\r\n      \"companyId\": \"a7b8c9d0-e1f2-3g4h-5i6j-7k8l9m0n1o2p\",\r\n      \"companyName\": \"Outra Empresa\",\r\n      \"totalSales\": 500.00,\r\n      \"totalTransactions\": 25\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\nExemplo de erro (Status 400 Bad Request):\r\n```json\r\n{\r\n  \"message\": \"Data inicial não pode ser maior que a data final.\"\r\n}\r\n```",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "description": "Data inicial para filtrar as vendas (opcional, formato ISO 8601).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Data final para filtrar as vendas (opcional, formato ISO 8601).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SalesReportResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesReportResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesReportResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Administration/audit-log": {
      "get": {
        "tags": [
          "Administration"
        ],
        "summary": "Lista logs de auditoria de ações administrativas.",
        "description": "Requer **Role: Admin** e **MFA validado**.\r\nAs datas devem estar no formato ISO 8601 (ex: `2024-01-01`).\r\n\r\nExemplo de resposta de sucesso (Status 200 OK):\r\n```json\r\n[\r\n  {\r\n    \"id\": \"123e4567-e89b-12d3-a456-426614174001\",\r\n    \"userId\": \"456e7890-e89b-12d3-a456-426614174002\",\r\n    \"action\": \"UpdateCompany\",\r\n    \"entityId\": \"789e0123-e89b-12d3-a456-426614174003\",\r\n    \"description\": \"Empresa 'XYZ Corp' atualizada com sucesso\",\r\n    \"timestamp\": \"2024-07-14T15:30:00Z\"\r\n  }\r\n]\r\n```",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "description": "Data inicial para filtrar logs (opcional, formato ISO 8601).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Data final para filtrar logs (opcional, formato ISO 8601).",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuditLogResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuditLogResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuditLogResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Administration/company/radius": {
      "get": {
        "tags": [
          "Administration"
        ],
        "summary": "Lista empresas localizadas dentro de um raio geográfico específico.",
        "description": "Requer **Role: Admin** e **MFA validado**.\r\n\r\nExemplo de resposta de sucesso (Status 200 OK):\r\n```json\r\n[\r\n  {\r\n    \"id\": \"123e4567-e89b-12d3-a456-426614174001\",\r\n    \"name\": \"Empresa Próxima\",\r\n    \"email\": \"proxima@empresa.com\",\r\n    \"phoneNumber\": \"123456789\",\r\n    \"isEnabled\": true,\r\n    \"feeType\": \"Percentage\",\r\n    \"feeValue\": 5.0,\r\n    \"city\": \"São Paulo\",\r\n    \"neighborhood\": \"Vila Mariana\",\r\n    \"street\": \"Rua Exemplo\",\r\n    \"number\": \"123\",\r\n    \"latitude\": -23.550520,\r\n    \"longitude\": -46.633308,\r\n    \"slogan\": \"O melhor da cidade!\",\r\n    \"description\": \"Descrição da empresa.\"\r\n  }\r\n]\r\n```\r\n\r\nExemplo de erro (Status 400 Bad Request):\r\n```json\r\n{\r\n  \"message\": \"Parâmetros de localização inválidos. Latitude e Longitude devem ser fornecidos.\"\r\n}\r\n```",
        "parameters": [
          {
            "name": "centerLat",
            "in": "query",
            "description": "Latitude do centro do raio.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "centerLon",
            "in": "query",
            "description": "Longitude do centro do raio.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "radiusKm",
            "in": "query",
            "description": "Raio em quilômetros para a busca.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "city",
            "in": "query",
            "description": "Filtro opcional por cidade.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "neighborhood",
            "in": "query",
            "description": "Filtro opcional por bairro.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Autentica um usuário e retorna um token JWT.",
        "description": "Para administradores, um **código MFA** pode ser necessário se estiver configurado.\r\n\r\nExemplo de requisição:\r\n```json\r\n{\r\n  \"email\": \"usuario@exemplo.com\",\r\n  \"password\": \"SenhaSegura123!\"\r\n}\r\n```\r\n\r\nExemplo de resposta de sucesso (Status 200 OK):\r\n```json\r\n{\r\n  \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\"\r\n}\r\n```\r\n\r\nExemplo de erro de credenciais inválidas (Status 400 Bad Request):\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7231#section-6.5.1](https://tools.ietf.org/html/rfc7231#section-6.5.1)\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"Credenciais inválidas.\"\r\n}\r\n```\r\nExemplo de erro MFA necessário (Status 401 Unauthorized):\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7235#section-3.1](https://tools.ietf.org/html/rfc7235#section-3.1)\",\r\n  \"title\": \"Unauthorized\",\r\n  \"status\": 401,\r\n  \"detail\": \"Código MFA é necessário para este usuário.\"\r\n}\r\n```",
        "parameters": [
          {
            "name": "mfaCode",
            "in": "query",
            "description": "Código MFA opcional, requerido para administradores com MFA ativo.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Dados de login: e-mail e senha.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": { }
              },
              "application/json": {
                "schema": { }
              },
              "text/json": {
                "schema": { }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Registra uma nova empresa no sistema.",
        "description": "Requer **Role: Admin** e **MFA validado**.\r\n\r\nExemplo de requisição:\r\n```json\r\n{\r\n  \"companyName\": \"Nova Empresa SA\",\r\n  \"email\": \"contato@novaempresa.com\",\r\n  \"password\": \"SenhaForteEmpresa!\",\r\n  \"phoneNumber\": \"11987654321\",\r\n  \"city\": \"São Paulo\",\r\n  \"neighborhood\": \"Centro\",\r\n  \"street\": \"Rua das Flores\",\r\n  \"number\": \"100\"\r\n}\r\n```\r\n\r\nExemplo de resposta de sucesso (Status 200 OK):\r\n```json\r\n{\r\n  \"companyId\": \"123e4567-e89b-12d3-a456-426614174001\"\r\n}\r\n```\r\n\r\nExemplo de erro de validação (Status 400 Bad Request):\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7231#section-6.5.1](https://tools.ietf.org/html/rfc7231#section-6.5.1)\",\r\n  \"title\": \"One or more validation errors occurred.\",\r\n  \"status\": 400,\r\n  \"errors\": {\r\n    \"Email\": [\r\n      \"O formato do e-mail é inválido.\"\r\n    ]\r\n  }\r\n}\r\n```\r\nExemplo de erro de conflito (Status 409 Conflict):\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7231#section-6.5.8](https://tools.ietf.org/html/rfc7231#section-6.5.8)\",\r\n  \"title\": \"Conflict\",\r\n  \"status\": 409,\r\n  \"detail\": \"E-mail 'contato@novaempresa.com' já registrado.\"\r\n}\r\n```",
        "requestBody": {
          "description": "Dados da empresa a ser registrada.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterCompanyRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterCompanyRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterCompanyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": { }
              },
              "application/json": {
                "schema": { }
              },
              "text/json": {
                "schema": { }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Auth/reset-password-request": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Solicita um token para iniciar o processo de redefinição de senha.",
        "description": "Um token será enviado para o **e-mail** ou **WhatsApp** do usuário.\r\n\r\nExemplo de requisição:\r\n```json\r\n{\r\n  \"email\": \"usuario@exemplo.com\"\r\n}\r\n```\r\n\r\nExemplo de resposta de sucesso (Status 200 OK):\r\n```json\r\n{\r\n  \"message\": \"Um token de redefinição de senha foi enviado para seu e-mail/WhatsApp.\"\r\n}\r\n```\r\n\r\nExemplo de erro (Status 404 Not Found):\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7231#section-6.5.4](https://tools.ietf.org/html/rfc7231#section-6.5.4)\",\r\n  \"title\": \"Not Found\",\r\n  \"status\": 404,\r\n  \"detail\": \"E-mail 'naoexistente@exemplo.com' não encontrado.\"\r\n}\r\n```",
        "requestBody": {
          "description": "E-mail do usuário que deseja redefinir a senha.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": { }
              },
              "application/json": {
                "schema": { }
              },
              "text/json": {
                "schema": { }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Auth/reset-password": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Confirma a redefinição de senha utilizando o token recebido.",
        "description": "Exemplo de requisição:\r\n```json\r\n{\r\n  \"email\": \"usuario@exemplo.com\",\r\n  \"token\": \"ABC123XYZ\",\r\n  \"newPassword\": \"NovaSenhaSegura456!\"\r\n}\r\n```\r\n\r\nExemplo de resposta de sucesso (Status 200 OK):\r\n```\r\n(Nenhum corpo de resposta, apenas status 200)\r\n```\r\n\r\nExemplo de erro (Status 400 Bad Request):\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7231#section-6.5.1](https://tools.ietf.org/html/rfc7231#section-6.5.1)\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"Token inválido ou expirado.\"\r\n}\r\n```",
        "requestBody": {
          "description": "E-mail do usuário, token de redefinição e a nova senha.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordConfirmRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordConfirmRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordConfirmRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Auth/mfa/setup": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Configura a autenticação multifator (MFA) para um usuário administrador.",
        "description": "Requer **Role: Admin**. Retorna um segredo **TOTP** que deve ser configurado em um aplicativo autenticador (e.g., Google Authenticator).\r\n\r\nExemplo de resposta de sucesso (Status 200 OK):\r\n```json\r\n{\r\n  \"secret\": \"JBSWY3DPEHPK3PXP\"\r\n}\r\n```\r\n\r\nExemplo de erro (Status 400 Bad Request):\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7231#section-6.5.1](https://tools.ietf.org/html/rfc7231#section-6.5.1)\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"MFA já configurado para este usuário.\"\r\n}\r\n```",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": { }
              },
              "application/json": {
                "schema": { }
              },
              "text/json": {
                "schema": { }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Auth/mfa": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Valida um código MFA fornecido por um administrador e retorna um novo token JWT com a claim `MfaValidated`.",
        "description": "Requer **Role: Admin**.\r\n\r\nExemplo de requisição:\r\n```json\r\n{\r\n  \"email\": \"admin@exemplo.com\",\r\n  \"mfaCode\": \"123456\"\r\n}\r\n```\r\n\r\nExemplo de resposta de sucesso (Status 200 OK):\r\n```json\r\n{\r\n  \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\"\r\n}\r\n```\r\n\r\nExemplo de erro (Status 400 Bad Request):\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7231#section-6.5.1](https://tools.ietf.org/html/rfc7231#section-6.5.1)\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"Código MFA inválido.\"\r\n}\r\n```",
        "requestBody": {
          "description": "E-mail do administrador e o código MFA gerado pelo aplicativo autenticador.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MfaRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MfaRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MfaRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": { }
              },
              "application/json": {
                "schema": { }
              },
              "text/json": {
                "schema": { }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Auth/me": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Retorna os dados do usuário atualmente logado.",
        "description": "Requer autenticação (qualquer role).\r\n\r\nExemplo de resposta de sucesso (Status 200 OK):\r\n```json\r\n{\r\n  \"userId\": \"dbe2b66a-1d5f-4a7b-8c9e-0f1a2b3c4d5e\",\r\n  \"email\": \"usuario@exemplo.com\",\r\n  \"roles\": [\"Tenant\"],\r\n  \"isAuthenticated\": true,\r\n  \"mfaValidated\": false,\r\n  \"tenantId\": \"e1f2g3h4-i5j6-k7l8-m9n0-o1p2q3r4s5t6\"\r\n}\r\n```\r\n\r\nExemplo de resposta para usuário não autenticado (Status 401 Unauthorized):\r\n```\r\n(Nenhum corpo de resposta, apenas status 401)\r\n```",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LoggedUser"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoggedUser"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoggedUser"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Company/{id}/profile": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "Obtém o perfil completo de uma empresa específica.",
        "description": "Este endpoint retorna todas as informações detalhadas de uma empresa, incluindo seus dados de contato, endereço, slogan, descrição, imagens, horários de funcionamento e links de mídias sociais.\r\n\r\nExemplo de resposta de sucesso (Status 200 OK):\r\n```json\r\n{\r\n  \"id\": \"123e4567-e89b-12d3-a456-426614174001\",\r\n  \"name\": \"Restaurante Exemplo\",\r\n  \"email\": \"contato@restaurante.com\",\r\n  \"phoneNumber\": \"11987654321\",\r\n  \"isEnabled\": true,\r\n  \"feeType\": \"Percentage\",\r\n  \"feeValue\": 5.0,\r\n  \"state\": \"SP\",\r\n  \"city\": \"São Paulo\",\r\n  \"neighborhood\": \"Centro\",\r\n  \"street\": \"Rua das Flores\",\r\n  \"number\": \"123\",\r\n  \"latitude\": -23.5505,\r\n  \"longitude\": -46.6333,\r\n  \"slogan\": \"A melhor comida da cidade!\",\r\n  \"description\": \"Restaurante especializado em pratos tradicionais.\",\r\n  \"images\": [\r\n    {\r\n      \"id\": \"img1\",\r\n      \"url\": \"[https://example.com/image1.jpg](https://example.com/image1.jpg)\",\r\n      \"description\": \"Fachada do restaurante\"\r\n    }\r\n  ],\r\n  \"operatingHours\": [\r\n    {\r\n      \"dayOfWeek\": 1,\r\n      \"openTime\": \"08:00\",\r\n      \"closeTime\": \"22:00\",\r\n      \"isOpen\": true\r\n    }\r\n  ],\r\n  \"socialMedia\": [\r\n    {\r\n      \"platform\": \"Instagram\",\r\n      \"url\": \"[https://instagram.com/restaurante](https://instagram.com/restaurante)\"\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\nExemplo de erro (Status 404 Not Found):\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7231#section-6.5.4](https://tools.ietf.org/html/rfc7231#section-6.5.4)\",\r\n  \"title\": \"Not Found\",\r\n  \"status\": 404,\r\n  \"detail\": \"Empresa com ID '99999999-9999-9999-9999-999999999999' não encontrada.\"\r\n}\r\n```\r\nExemplo de erro (Status 400 Bad Request):\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7231#section-6.5.1](https://tools.ietf.org/html/rfc7231#section-6.5.1)\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"O ID fornecido 'abc-123' não é um GUID válido.\"\r\n}\r\n```",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "O **ID (GUID)** da empresa a ser consultada.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyProfileResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyProfileResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyProfileResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Coupon": {
      "post": {
        "tags": [
          "Coupon"
        ],
        "summary": "Cria um novo cupom para o tenant autenticado.",
        "description": "Este endpoint permite que um administrador ou um tenant crie um novo cupom de desconto.\r\nRequer autenticação com as roles **Admin** ou **Tenant**.\r\n\r\nExemplo de requisição:\r\n```json\r\n{\r\n  \"code\": \"VERAO2025\",\r\n  \"description\": \"Desconto especial de verão\",\r\n  \"discountValue\": 15.00,\r\n  \"isActive\": true,\r\n  \"startDate\": \"2025-07-15T00:00:00Z\",\r\n  \"endDate\": \"2025-09-30T23:59:59Z\"\r\n}\r\n```\r\n\r\nExemplo de resposta de sucesso (Status 201 Created):\r\n```json\r\n{\r\n  \"id\": \"123e4567-e89b-12d3-a456-426614174001\"\r\n}\r\n```\r\n\r\nExemplo de erro de validação (Status 400 Bad Request):\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7231#section-6.5.1](https://tools.ietf.org/html/rfc7231#section-6.5.1)\",\r\n  \"title\": \"One or more validation errors occurred.\",\r\n  \"status\": 400,\r\n  \"errors\": {\r\n    \"Code\": [\r\n      \"O código do cupom é obrigatório.\"\r\n    ]\r\n  }\r\n}\r\n```\r\nExemplo de erro de conflito (Status 409 Conflict):\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7231#section-6.5.8](https://tools.ietf.org/html/rfc7231#section-6.5.8)\",\r\n  \"title\": \"Conflict\",\r\n  \"status\": 409,\r\n  \"detail\": \"O código 'VERAO2025' já existe para este tenant.\"\r\n}\r\n```",
        "requestBody": {
          "description": "Dados do cupom a ser criado.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCouponRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCouponRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCouponRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": { }
              },
              "application/json": {
                "schema": { }
              },
              "text/json": {
                "schema": { }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": [
          "Coupon"
        ],
        "summary": "Lista os cupons disponíveis para o tenant autenticado, com filtros opcionais.",
        "description": "Este endpoint permite filtrar cupons por status de ativação (`isActive`) e pelo número de telefone de um cliente associado (`customerPhoneNumber`).\r\nRequer autenticação com as roles **Admin** ou **Tenant**.\r\n\r\nExemplo de resposta de sucesso (Status 200 OK):\r\n```json\r\n[\r\n  {\r\n    \"id\": \"123e4567-e89b-12d3-a456-426614174001\",\r\n    \"tenantId\": \"456e7890-e89b-12d3-a456-426614174002\",\r\n    \"code\": \"DESCONTO10\",\r\n    \"description\": \"10% de desconto\",\r\n    \"discountValue\": 10.00,\r\n    \"isActive\": true,\r\n    \"startDate\": \"2025-07-14T00:00:00Z\",\r\n    \"endDate\": \"2025-12-31T23:59:59Z\"\r\n  },\r\n  {\r\n    \"id\": \"a1b2c3d4-e5f6-7g8h-9i0j-k1l2m3n4o5p6\",\r\n    \"tenantId\": \"456e7890-e89b-12d3-a456-426614174002\",\r\n    \"code\": \"FRETEGRATIS\",\r\n    \"description\": \"Frete Grátis na primeira compra\",\r\n    \"discountValue\": 0.00,\r\n    \"isActive\": false,\r\n    \"startDate\": \"2025-06-01T00:00:00Z\",\r\n    \"endDate\": \"2025-06-30T23:59:59Z\"\r\n  }\r\n]\r\n```\r\nExemplo de erro de autenticação (Status 401 Unauthorized):\r\n```\r\n(Nenhum corpo de resposta, apenas status 401)\r\n```",
        "parameters": [
          {
            "name": "isActive",
            "in": "query",
            "description": "Filtro opcional para listar apenas cupons ativos ou inativos.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "customerPhoneNumber",
            "in": "query",
            "description": "Filtro opcional para listar cupons associados a um número de telefone de cliente específico.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CouponResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CouponResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CouponResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Coupon/{id}": {
      "get": {
        "tags": [
          "Coupon"
        ],
        "summary": "Obtém os detalhes de um cupom específico por seu ID.",
        "description": "Este endpoint retorna todas as informações de um cupom, desde que pertença ao tenant autenticado.\r\nRequer autenticação com as roles **Admin** ou **Tenant**.\r\n\r\nExemplo de resposta de sucesso (Status 200 OK):\r\n```json\r\n{\r\n  \"id\": \"123e4567-e89b-12d3-a456-426614174001\",\r\n  \"tenantId\": \"456e7890-e89b-12d3-a456-426614174002\",\r\n  \"code\": \"DESCONTO10\",\r\n  \"description\": \"10% de desconto\",\r\n  \"discountValue\": 10.00,\r\n  \"isActive\": true,\r\n  \"startDate\": \"2025-07-14T00:00:00Z\",\r\n  \"endDate\": \"2025-12-31T23:59:59Z\"\r\n}\r\n```\r\n\r\nExemplo de erro (Status 400 Bad Request):\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7231#section-6.5.1](https://tools.ietf.org/html/rfc7231#section-6.5.1)\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"O ID do cupom 'invalido-id' não é um GUID válido.\"\r\n}\r\n```\r\nExemplo de erro (Status 404 Not Found):\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7231#section-6.5.4](https://tools.ietf.org/html/rfc7231#section-6.5.4)\",\r\n  \"title\": \"Not Found\",\r\n  \"status\": 404,\r\n  \"detail\": \"Cupom com ID '99999999-9999-9999-9999-999999999999' não encontrado para o tenant.\"\r\n}\r\n```",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "O **ID (GUID)** do cupom a ser consultado.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CouponResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CouponResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CouponResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Coupon"
        ],
        "summary": "Atualiza um cupom existente para o tenant autenticado.",
        "description": "Permite a modificação das propriedades de um cupom existente.\r\nRequer autenticação com as roles **Admin** ou **Tenant**.\r\n\r\nExemplo de requisição:\r\n```json\r\n{\r\n  \"code\": \"SUPERDESCONTO20\",\r\n  \"description\": \"20% de desconto em toda a loja\",\r\n  \"discountValue\": 20.00,\r\n  \"isActive\": true,\r\n  \"startDate\": \"2025-07-14T00:00:00Z\",\r\n  \"endDate\": \"2026-01-31T23:59:59Z\"\r\n}\r\n```\r\n\r\nExemplo de resposta de sucesso (Status 204 No Content):\r\n```\r\n(Nenhum corpo de resposta, apenas status 204)\r\n```\r\n\r\nExemplo de erro de validação (Status 400 Bad Request):\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7231#section-6.5.1](https://tools.ietf.org/html/rfc7231#section-6.5.1)\",\r\n  \"title\": \"One or more validation errors occurred.\",\r\n  \"status\": 400,\r\n  \"errors\": {\r\n    \"DiscountValue\": [\r\n      \"O valor de desconto deve ser maior que zero.\"\r\n    ]\r\n  }\r\n}\r\n```\r\nExemplo de erro (Status 404 Not Found):\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7231#section-6.5.4](https://tools.ietf.org/html/rfc7231#section-6.5.4)\",\r\n  \"title\": \"Not Found\",\r\n  \"status\": 404,\r\n  \"detail\": \"Cupom com ID '99999999-9999-9999-9999-999999999999' não encontrado para atualização.\"\r\n}\r\n```\r\nExemplo de erro de conflito (Status 409 Conflict):\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7231#section-6.5.8](https://tools.ietf.org/html/rfc7231#section-6.5.8)\",\r\n  \"title\": \"Conflict\",\r\n  \"status\": 409,\r\n  \"detail\": \"O código de cupom 'SUPERDESCONTO20' já está em uso por outro cupom.\"\r\n}\r\n```",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "O **ID (GUID)** do cupom a ser atualizado.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Dados atualizados do cupom.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCouponRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCouponRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCouponRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Coupon"
        ],
        "summary": "Remove um cupom do tenant autenticado.",
        "description": "Este endpoint permite que um administrador ou um tenant remova um cupom existente.\r\nRequer autenticação com as roles **Admin** ou **Tenant**.\r\n\r\nExemplo de resposta de sucesso (Status 204 No Content):\r\n```\r\n(Nenhum corpo de resposta, apenas status 204)\r\n```\r\n\r\nExemplo de erro (Status 400 Bad Request):\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7231#section-6.5.1](https://tools.ietf.org/html/rfc7231#section-6.5.1)\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"O ID do cupom 'invalido-id' não é um GUID válido.\"\r\n}\r\n```\r\n\r\nExemplo de erro (Status 404 Not Found):\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7231#section-6.5.4](https://tools.ietf.org/html/rfc7231#section-6.5.4)\",\r\n  \"title\": \"Not Found\",\r\n  \"status\": 404,\r\n  \"detail\": \"Cupom com ID '99999999-9999-9999-9999-999999999999' não encontrado para o tenant.\"\r\n}\r\n```\r\n\r\nExemplo de erro de conflito (Status 409 Conflict):\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7231#section-6.5.8](https://tools.ietf.org/html/rfc7231#section-6.5.8)\",\r\n  \"title\": \"Conflict\",\r\n  \"status\": 409,\r\n  \"detail\": \"Não é possível remover um cupom que está sendo usado em pedidos ativos.\"\r\n}\r\n```",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "O **ID (GUID)** do cupom a ser removido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Customer": {
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "Atualiza ou cadastra um cliente com base no número de telefone.",
        "description": "Este endpoint permite que um administrador ou um tenant atualize as informações de um cliente existente ou cadastre um novo cliente se o número de telefone não for encontrado.\r\nRequer autenticação com as roles **Admin** ou **Tenant**.\r\n\r\nExemplo de requisição:\r\n```json\r\n{\r\n  \"phoneNumber\": \"11998877665\",\r\n  \"name\": \"Maria Oliveira\",\r\n  \"state\": \"MG\",\r\n  \"city\": \"Belo Horizonte\",\r\n  \"street\": \"Avenida Afonso Pena\",\r\n  \"number\": \"500\",\r\n  \"latitude\": -19.9208,\r\n  \"longitude\": -43.9378\r\n}\r\n```\r\n\r\nExemplo de resposta de sucesso (Status 204 No Content):\r\n```\r\n(Nenhum corpo de resposta, apenas status 204)\r\n```\r\n\r\nExemplo de erro de validação (Status 400 Bad Request):\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7231#section-6.5.1](https://tools.ietf.org/html/rfc7231#section-6.5.1)\",\r\n  \"title\": \"One or more validation errors occurred.\",\r\n  \"status\": 400,\r\n  \"errors\": {\r\n    \"PhoneNumber\": [\r\n      \"O número de telefone é inválido.\"\r\n    ]\r\n  }\r\n}\r\n```\r\nExemplo de erro de autenticação (Status 401 Unauthorized):\r\n```\r\n(Nenhum corpo de resposta, apenas status 401)\r\n```",
        "requestBody": {
          "description": "Dados do cliente a serem atualizados ou cadastrados.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Lista clientes do tenant, com opções de filtro e paginação.",
        "description": "Este endpoint retorna uma lista paginada de clientes pertencentes ao tenant autenticado. É possível filtrar a lista por número de telefone.\r\nRequer autenticação com as roles **Admin** ou **Tenant**.\r\n\r\nExemplo de resposta de sucesso (Status 200 OK):\r\n```json\r\n{\r\n  \"items\": [\r\n    {\r\n      \"id\": \"123e4567-e89b-12d3-a456-426614174001\",\r\n      \"tenantId\": \"456e7890-e89b-12d3-a456-426614174002\",\r\n      \"phoneNumber\": \"11987654321\",\r\n      \"name\": \"João Silva\",\r\n      \"state\": \"SP\",\r\n      \"city\": \"São Paulo\",\r\n      \"street\": \"Rua das Flores\",\r\n      \"number\": \"123\",\r\n      \"latitude\": -23.5505,\r\n      \"longitude\": -46.6333,\r\n      \"createdAt\": \"2025-07-14T12:00:00Z\"\r\n    },\r\n    {\r\n      \"id\": \"a9b8c7d6-e5f4-3g2h-1i0j-k9l8m7n6o5p4\",\r\n      \"tenantId\": \"456e7890-e89b-12d3-a456-426614174002\",\r\n      \"phoneNumber\": \"21991122334\",\r\n      \"name\": \"Ana Souza\",\r\n      \"state\": \"RJ\",\r\n      \"city\": \"Rio de Janeiro\",\r\n      \"street\": \"Rua Copacabana\",\r\n      \"number\": \"456\",\r\n      \"latitude\": -22.9710,\r\n      \"longitude\": -43.1820,\r\n      \"createdAt\": \"2025-07-13T10:30:00Z\"\r\n    }\r\n  ],\r\n  \"totalCount\": 2,\r\n  \"pageNumber\": 1,\r\n  \"pageSize\": 20\r\n}\r\n```\r\nExemplo de erro de autenticação (Status 401 Unauthorized):\r\n```\r\n(Nenhum corpo de resposta, apenas status 401)\r\n```",
        "parameters": [
          {
            "name": "phoneNumber",
            "in": "query",
            "description": "Filtro opcional: número de telefone do cliente.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Número da página para paginação (padrão: 1).",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Tamanho da página para paginação (padrão: 20).",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerResponsePagedResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerResponsePagedResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerResponsePagedResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Customer/{id}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Obtém os detalhes de um cliente específico por seu ID.",
        "description": "Este endpoint retorna todas as informações de um cliente, desde que o cliente pertença ao tenant autenticado.\r\nRequer autenticação com as roles **Admin** ou **Tenant**.\r\n\r\nExemplo de resposta de sucesso (Status 200 OK):\r\n```json\r\n{\r\n  \"id\": \"123e4567-e89b-12d3-a456-426614174001\",\r\n  \"tenantId\": \"456e7890-e89b-12d3-a456-426614174002\",\r\n  \"phoneNumber\": \"11987654321\",\r\n  \"name\": \"João Silva\",\r\n  \"state\": \"SP\",\r\n  \"city\": \"São Paulo\",\r\n  \"street\": \"Rua das Flores\",\r\n  \"number\": \"123\",\r\n  \"latitude\": -23.5505,\r\n  \"longitude\": -46.6333,\r\n  \"createdAt\": \"2025-07-14T12:00:00Z\"\r\n}\r\n```\r\n\r\nExemplo de erro (Status 400 Bad Request):\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7231#section-6.5.1](https://tools.ietf.org/html/rfc7231#section-6.5.1)\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"O ID do cliente 'abc-123' não é um GUID válido.\"\r\n}\r\n```\r\nExemplo de erro (Status 404 Not Found):\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7231#section-6.5.4](https://tools.ietf.org/html/rfc7231#section-6.5.4)\",\r\n  \"title\": \"Not Found\",\r\n  \"status\": 404,\r\n  \"detail\": \"Cliente com ID '99999999-9999-9999-9999-999999999999' não encontrado para o tenant.\"\r\n}\r\n```",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "O **ID (GUID)** do cliente a ser consultado.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Database/execute-query": {
      "post": {
        "tags": [
          "Database"
        ],
        "summary": "Executa uma query SQL de consulta (SELECT) no banco de dados.",
        "description": "Este endpoint permite a execução de queries SQL do tipo **SELECT** para consulta de dados.\r\nÉ uma operação altamente privilegiada e requer que o usuário autenticado possua a role **Admin** e tenha passado pela validação de **MFA (Autenticação Multifator)**.\r\n\r\nExemplo de requisição:\r\n```json\r\n{\r\n  \"query\": \"SELECT Id, Name, Email FROM Companies WHERE IsEnabled = TRUE LIMIT 10\"\r\n}\r\n```\r\n\r\nExemplo de resposta de sucesso (Status 200 OK):\r\n```json\r\n{\r\n  \"columns\": [\"Id\", \"Name\", \"Email\"],\r\n  \"rows\": [\r\n    [\"123e4567-e89b-12d3-a456-426614174001\", \"Empresa A\", \"contato@empresaA.com\"],\r\n    [\"987f6543-d2c1-b0a9-8765-43210fedcba9\", \"Empresa B\", \"info@empresaB.com\"]\r\n  ],\r\n  \"rowCount\": 2\r\n}\r\n```\r\n\r\nExemplo de erro de requisição inválida (Status 400 Bad Request):\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7231#section-6.5.1](https://tools.ietf.org/html/rfc7231#section-6.5.1)\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"Apenas comandos SELECT são permitidos. Query recebida: 'DELETE FROM Users'.\"\r\n}\r\n```\r\nExemplo de erro de autenticação (Status 401 Unauthorized):\r\n```\r\n(Nenhum corpo de resposta, apenas status 401)\r\n```\r\nExemplo de erro interno do servidor (Status 500 Internal Server Error):\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7231#section-6.6.1](https://tools.ietf.org/html/rfc7231#section-6.6.1)\",\r\n  \"title\": \"Internal Server Error\",\r\n  \"status\": 500,\r\n  \"detail\": \"Ocorreu um erro inesperado ao executar a query: Timeout de banco de dados.\"\r\n}\r\n```",
        "requestBody": {
          "description": "Um objeto Hephaestus.Application.DTOs.Request.ExecuteQueryRequest contendo a query SQL a ser executada.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExecuteQueryRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ExecuteQueryRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ExecuteQueryRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ExecuteQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExecuteQueryResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExecuteQueryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Menu": {
      "post": {
        "tags": [
          "Menu"
        ],
        "summary": "Creates a new menu item for the authenticated tenant.",
        "description": "This endpoint allows a tenant to add a new item to their menu.\r\nAuthentication with the **Tenant** role is required.\r\n            \r\nExample Request:\r\n```json\r\n{\r\n  \"name\": \"Pizza Calabresa\",\r\n  \"description\": \"Pizza de calabresa defumada com cebola e queijo mussarela.\",\r\n  \"categoryId\": \"c0d1e2f3-a4b5-c6d7-e8f9-0a1b2c3d4e5f\",\r\n  \"price\": 45.90,\r\n  \"isAvailable\": true,\r\n  \"tagIds\": [\"massas\", \"pizzas\"],\r\n  \"availableAdditionalIds\": [\"ad001\", \"ad002\"],\r\n  \"imageUrl\": \"[https://example.com/images/pizza-calabresa.jpg](https://example.com/images/pizza-calabresa.jpg)\"\r\n}\r\n```\r\n            \r\nExample Success Response (Status 201 Created):\r\n```json\r\n{\r\n  \"id\": \"123e4567-e89b-12d3-a456-426614174001\"\r\n}\r\n```\r\n            \r\nExample Validation Error Response (Status 400 Bad Request):\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7231#section-6.5.1](https://tools.ietf.org/html/rfc7231#section-6.5.1)\",\r\n  \"title\": \"One or more validation errors occurred.\",\r\n  \"status\": 400,\r\n  \"errors\": {\r\n    \"Name\": [\r\n      \"The Name field is required.\"\r\n    ],\r\n    \"Price\": [\r\n      \"The Price field must be a positive value.\"\r\n    ]\r\n  }\r\n}\r\n```\r\nExample Unauthorized Response (Status 401 Unauthorized):\r\n```\r\n(No response body, just 401 status)\r\n```",
        "requestBody": {
          "description": "The data for the menu item to be created.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMenuItemRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMenuItemRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMenuItemRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": { }
              },
              "application/json": {
                "schema": { }
              },
              "text/json": {
                "schema": { }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": [
          "Menu"
        ],
        "summary": "Lists menu items for the authenticated tenant with pagination.",
        "description": "This endpoint retrieves a paginated list of menu items belonging to the authenticated tenant.\r\nAuthentication with the **Tenant** role is required.\r\n            \r\nExample Success Response (Status 200 OK):\r\n```json\r\n{\r\n  \"items\": [\r\n    {\r\n      \"id\": \"123e4567-e89b-12d3-a456-426614174001\",\r\n      \"tenantId\": \"456e7890-e89b-12d3-a456-426614174002\",\r\n      \"name\": \"X-Burger\",\r\n      \"description\": \"Hambúrguer com queijo e salada\",\r\n      \"categoryId\": \"789e0123-e89b-12d3-a456-426614174003\",\r\n      \"price\": 25.90,\r\n      \"isAvailable\": true,\r\n      \"tagIds\": [\"tag1\", \"tag2\"],\r\n      \"createdAt\": \"2024-01-01T12:00:00Z\"\r\n    },\r\n    {\r\n      \"id\": \"a9b8c7d6-e5f4-3g2h-1i0j-k9l8m7n6o5p4\",\r\n      \"tenantId\": \"456e7890-e89b-12d3-a456-426614174002\",\r\n      \"name\": \"Refrigerante Cola\",\r\n      \"description\": \"Lata de 350ml\",\r\n      \"categoryId\": \"c0d1e2f3-a4b5-c6d7-e8f9-0a1b2c3d4e5f\",\r\n      \"price\": 7.00,\r\n      \"isAvailable\": true,\r\n      \"tagIds\": [\"bebidas\"],\r\n      \"createdAt\": \"2024-01-02T10:00:00Z\"\r\n    }\r\n  ],\r\n  \"totalCount\": 2,\r\n  \"pageNumber\": 1,\r\n  \"pageSize\": 20\r\n}\r\n```\r\nExample Bad Request Response (Status 400 Bad Request):\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7231#section-6.5.1](https://tools.ietf.org/html/rfc7231#section-6.5.1)\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"Page number must be greater than 0.\"\r\n}\r\n```\r\nExample Unauthorized Response (Status 401 Unauthorized):\r\n```\r\n(No response body, just 401 status)\r\n```",
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "description": "The page number for pagination (defaults to 1).",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The number of items per page for pagination (defaults to 20).",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MenuItemResponsePagedResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MenuItemResponsePagedResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MenuItemResponsePagedResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/Menu/{id}": {
      "get": {
        "tags": [
          "Menu"
        ],
        "summary": "Retrieves a specific menu item by its ID.",
        "description": "This endpoint returns the detailed information of a single menu item, provided it belongs to the authenticated tenant.\r\nAuthentication with the **Tenant** role is required.\r\n            \r\nExample Success Response (Status 200 OK):\r\n```json\r\n{\r\n  \"id\": \"123e4567-e89b-12d3-a456-426614174001\",\r\n  \"tenantId\": \"456e7890-e89b-12d3-a456-426614174002\",\r\n  \"name\": \"X-Burger\",\r\n  \"description\": \"Hambúrguer com queijo e salada\",\r\n  \"categoryId\": \"789e0123-e89b-12d3-a456-426614174003\",\r\n  \"price\": 25.90,\r\n  \"isAvailable\": true,\r\n  \"tagIds\": [\"tag1\", \"tag2\"],\r\n  \"availableAdditionalIds\": [\"add1\", \"add2\"],\r\n  \"imageUrl\": \"[https://example.com/images/x-burger.jpg](https://example.com/images/x-burger.jpg)\"\r\n}\r\n```\r\n            \r\nExample Bad Request Response (Status 400 Bad Request):\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7231#section-6.5.1](https://tools.ietf.org/html/rfc7231#section-6.5.1)\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The provided ID 'invalid-guid' is not a valid GUID.\"\r\n}\r\n```\r\nExample Not Found Response (Status 404 Not Found):\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7231#section-6.5.4](https://tools.ietf.org/html/rfc7231#section-6.5.4)\",\r\n  \"title\": \"Not Found\",\r\n  \"status\": 404,\r\n  \"detail\": \"MenuItem with ID '99999999-9999-9999-9999-999999999999' not found for the tenant.\"\r\n}\r\n```\r\nExample Unauthorized Response (Status 401 Unauthorized):\r\n```\r\n(No response body, just 401 status)\r\n```",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The **ID (GUID)** of the menu item to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MenuItemResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MenuItemResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MenuItemResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Menu"
        ],
        "summary": "Updates an existing menu item.",
        "description": "This endpoint allows a tenant to update an existing menu item. Only the fields provided in the request will be updated.\r\nAuthentication with the **Tenant** role is required.\r\n            \r\nExample Request:\r\n```json\r\n{\r\n  \"name\": \"X-Burger Deluxe\",\r\n  \"description\": \"Hambúrguer premium com queijo, salada e bacon\",\r\n  \"categoryId\": \"789e0123-e89b-12d3-a456-426614174003\",\r\n  \"price\": 32.90,\r\n  \"isAvailable\": true,\r\n  \"tagIds\": [\"tag1\", \"tag2\", \"premium\"],\r\n  \"availableAdditionalIds\": [\"add1\", \"add2\", \"add3\"],\r\n  \"imageUrl\": \"[https://example.com/images/x-burger-deluxe.jpg](https://example.com/images/x-burger-deluxe.jpg)\"\r\n}\r\n```\r\n            \r\nExample Success Response (Status 204 No Content):\r\n```\r\n(No response body, just 204 status)\r\n```\r\n            \r\nExample Validation Error Response (Status 400 Bad Request):\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7231#section-6.5.1](https://tools.ietf.org/html/rfc7231#section-6.5.1)\",\r\n  \"title\": \"One or more validation errors occurred.\",\r\n  \"status\": 400,\r\n  \"errors\": {\r\n    \"Price\": [\r\n      \"The Price field must be a positive value.\"\r\n    ]\r\n  }\r\n}\r\n```\r\n            \r\nExample Not Found Response (Status 404 Not Found):\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7231#section-6.5.4](https://tools.ietf.org/html/rfc7231#section-6.5.4)\",\r\n  \"title\": \"Not Found\",\r\n  \"status\": 404,\r\n  \"detail\": \"MenuItem with ID '99999999-9999-9999-9999-999999999999' not found for the tenant.\"\r\n}\r\n```\r\n            \r\nExample Unauthorized Response (Status 401 Unauthorized):\r\n```\r\n(No response body, just 401 status)\r\n```",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The **ID (GUID)** of the menu item to be updated.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The updated data for the menu item.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMenuItemRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMenuItemRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMenuItemRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Menu"
        ],
        "summary": "Deletes a menu item.",
        "description": "This endpoint allows a tenant to delete a menu item from their catalog.\r\nAuthentication with the **Tenant** role is required.\r\n            \r\nExample Success Response (Status 204 No Content):\r\n```\r\n(No response body, just 204 status)\r\n```\r\n            \r\nExample Not Found Response (Status 404 Not Found):\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7231#section-6.5.4](https://tools.ietf.org/html/rfc7231#section-6.5.4)\",\r\n  \"title\": \"Not Found\",\r\n  \"status\": 404,\r\n  \"detail\": \"MenuItem with ID '99999999-9999-9999-9999-999999999999' not found for the tenant.\"\r\n}\r\n```\r\n            \r\nExample Unauthorized Response (Status 401 Unauthorized):\r\n```\r\n(No response body, just 401 status)\r\n```",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The **ID (GUID)** of the menu item to be deleted.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/OpenAI/chat": {
      "post": {
        "tags": [
          "OpenAI"
        ],
        "summary": "Envia uma consulta (prompt) para o modelo de chat da OpenAI e retorna a resposta.",
        "description": "Este endpoint permite interagir com a API de chat da OpenAI, enviando um prompt e, opcionalmente,\r\nespecificando o formato de resposta desejado (texto ou JSON).\r\n\r\n\r\n\r\n**Requisitos de Autorização:**\r\nPara acessar este endpoint, o usuário autenticado deve possuir a role **Admin**\r\ne ter passado pela validação de **MFA (Autenticação Multifator)**.\r\n\r\n\r\n\r\n**Exemplo de Requisição:**\r\n```json\r\n{\r\n  \"prompt\": \"Qual a capital da França?\",\r\n  \"responseFormat\": \"text\"\r\n}\r\n```\r\nou\r\n```json\r\n{\r\n  \"prompt\": \"Me forneça informações sobre a Torre Eiffel em formato JSON com campos 'nome', 'cidade' e 'altura'.\",\r\n  \"responseFormat\": \"json_object\"\r\n}\r\n```\r\n            \r\n**Exemplo de Resposta de Sucesso (Status 200 OK - 'text' format):**\r\n```json\r\n{\r\n  \"response\": \"A capital da França é Paris.\",\r\n  \"usage\": {\r\n    \"promptTokens\": 8,\r\n    \"completionTokens\": 5,\r\n    \"totalTokens\": 13\r\n  }\r\n}\r\n```\r\n            \r\n**Exemplo de Resposta de Sucesso (Status 200 OK - 'json_object' format):**\r\n```json\r\n{\r\n  \"response\": \"{\\\"nome\\\": \\\"Torre Eiffel\\\", \\\"cidade\\\": \\\"Paris\\\", \\\"altura\\\": \\\"330 metros\\\"}\",\r\n  \"usage\": {\r\n    \"promptTokens\": 25,\r\n    \"completionTokens\": 20,\r\n    \"totalTokens\": 45\r\n  }\r\n}\r\n```\r\n            \r\n**Exemplo de Erro de Validação (Status 400 Bad Request):**\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7231#section-6.5.1](https://tools.ietf.org/html/rfc7231#section-6.5.1)\",\r\n  \"title\": \"One or more validation errors occurred.\",\r\n  \"status\": 400,\r\n  \"errors\": {\r\n    \"Prompt\": [\r\n      \"O campo 'Prompt' é obrigatório e não pode ser vazio.\"\r\n    ]\r\n  }\r\n}\r\n```\r\n            \r\n**Exemplo de Erro de Autorização (Status 401 Unauthorized):**\r\n```\r\n(Nenhum corpo de resposta, apenas status 401)\r\n```\r\n            \r\n**Exemplo de Erro Interno do Servidor (Status 500 Internal Server Error):**\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7231#section-6.6.1](https://tools.ietf.org/html/rfc7231#section-6.6.1)\",\r\n  \"title\": \"Internal Server Error\",\r\n  \"status\": 500,\r\n  \"detail\": \"Ocorreu um erro inesperado ao se comunicar com a API da OpenAI. Detalhes: Serviço indisponível.\"\r\n}\r\n```",
        "requestBody": {
          "description": "Um objeto Hephaestus.Application.DTOs.Request.OpenAIRequest contendo o prompt e configurações adicionais para a consulta.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OpenAIRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OpenAIRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OpenAIRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OpenAIResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OpenAIResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OpenAIResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/order": {
      "post": {
        "tags": [
          "Order"
        ],
        "summary": "Cria um novo pedido para o tenant autenticado.",
        "description": "Este endpoint permite que um tenant registre um novo pedido. A autenticação com a role **Tenant** é obrigatória.\r\n            \r\n**Exemplo de Requisição:**\r\n```json\r\n{\r\n  \"customerPhoneNumber\": \"11987654321\",\r\n  \"items\": [\r\n    {\r\n      \"menuItemId\": \"a1b2c3d4-e5f6-7890-1234-567890abcdef\",\r\n      \"quantity\": 2\r\n    }\r\n  ],\r\n  \"notes\": \"Entrega sem contato\"\r\n}\r\n```\r\n            \r\n**Exemplo de Resposta de Sucesso (Status 201 Created):**\r\n```json\r\n{\r\n  \"id\": \"e4f5g6h7-i8j9-0k1l-2m3n-4o5p6q7r8s9t\"\r\n}\r\n```\r\n            \r\n**Exemplo de Erro (Status 401 Unauthorized):**\r\n```\r\n(Sem corpo de resposta, apenas status 401)\r\n```\r\n            \r\n**Exemplo de Erro (Status 400 Bad Request):**\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7231#section-6.5.1](https://tools.ietf.org/html/rfc7231#section-6.5.1)\",\r\n  \"title\": \"One or more validation errors occurred.\",\r\n  \"status\": 400,\r\n  \"errors\": {\r\n    \"CustomerPhoneNumber\": [\r\n      \"O número de telefone do cliente é obrigatório.\"\r\n    ]\r\n  }\r\n}\r\n```\r\n            \r\n**Exemplo de Erro (Status 500 Internal Server Error):**\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7231#section-6.6.1](https://tools.ietf.org/html/rfc7231#section-6.6.1)\",\r\n  \"title\": \"Internal Server Error\",\r\n  \"status\": 500,\r\n  \"detail\": \"Ocorreu um erro inesperado ao criar o pedido.\"\r\n}\r\n```",
        "requestBody": {
          "description": "Dados para a criação do pedido (Hephaestus.Application.DTOs.Request.CreateOrderRequest).",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrderRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrderRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrderRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": { }
              },
              "application/json": {
                "schema": { }
              },
              "text/json": {
                "schema": { }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "Lista pedidos para o tenant autenticado.",
        "description": "Este endpoint permite consultar uma lista de pedidos associados ao tenant autenticado.\r\nÉ possível filtrar os resultados por número de telefone do cliente e/ou pelo status do pedido.\r\nRequer autenticação com a role **Tenant**.\r\n            \r\n**Exemplo de Resposta de Sucesso (Status 200 OK):**\r\n```json\r\n[\r\n  {\r\n    \"id\": \"e4f5g6h7-i8j9-0k1l-2m3n-4o5p6q7r8s9t\",\r\n    \"customerPhoneNumber\": \"11987654321\",\r\n    \"status\": \"Pending\",\r\n    \"totalAmount\": 51.80,\r\n    \"createdAt\": \"2024-07-14T10:00:00Z\"\r\n  },\r\n  {\r\n    \"id\": \"a1b2c3d4-e5f6-7890-1234-567890fedcba\",\r\n    \"customerPhoneNumber\": \"11998877665\",\r\n    \"status\": \"Completed\",\r\n    \"totalAmount\": 7.00,\r\n    \"createdAt\": \"2024-07-13T15:30:00Z\"\r\n  }\r\n]\r\n```\r\n            \r\n**Exemplo de Erro (Status 401 Unauthorized):**\r\n```\r\n(Sem corpo de resposta, apenas status 401)\r\n```\r\n            \r\n**Exemplo de Erro (Status 500 Internal Server Error):**\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7231#section-6.6.1](https://tools.ietf.org/html/rfc7231#section-6.6.1)\",\r\n  \"title\": \"Internal Server Error\",\r\n  \"status\": 500,\r\n  \"detail\": \"Ocorreu um erro ao buscar os pedidos.\"\r\n}\r\n```",
        "parameters": [
          {
            "name": "customerPhoneNumber",
            "in": "query",
            "description": "Filtro opcional: número de telefone do cliente.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filtro opcional: status do pedido (e.g., 'Pending', 'Processing', 'Completed', 'Cancelled').",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": { }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": { }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/order/{id}": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "Obtém os detalhes de um pedido específico por ID.",
        "description": "Este endpoint retorna todas as informações de um pedido, desde que o pedido pertença ao tenant autenticado.\r\nRequer autenticação com a role **Tenant**.\r\n            \r\n**Exemplo de Resposta de Sucesso (Status 200 OK):**\r\n```json\r\n{\r\n  \"id\": \"e4f5g6h7-i8j9-0k1l-2m3n-4o5p6q7r8s9t\",\r\n  \"customerPhoneNumber\": \"11987654321\",\r\n  \"deliveryAddress\": {\r\n    \"street\": \"Rua das Flores\",\r\n    \"number\": \"123\"\r\n  },\r\n  \"status\": \"Processing\",\r\n  \"totalAmount\": 65.10\r\n}\r\n```\r\n            \r\n**Exemplo de Erro (Status 401 Unauthorized):**\r\n```\r\n(Sem corpo de resposta, apenas status 401)\r\n```\r\n            \r\n**Exemplo de Erro (Status 404 Not Found):**\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7231#section-6.5.4](https://tools.ietf.org/html/rfc7231#section-6.5.4)\",\r\n  \"title\": \"Not Found\",\r\n  \"status\": 404,\r\n  \"detail\": \"Pedido com ID '99999999-9999-9999-9999-999999999999' não encontrado para este tenant.\"\r\n}\r\n```\r\n            \r\n**Exemplo de Erro (Status 500 Internal Server Error):**\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7231#section-6.6.1](https://tools.ietf.org/html/rfc7231#section-6.6.1)\",\r\n  \"title\": \"Internal Server Error\",\r\n  \"status\": 500,\r\n  \"detail\": \"Ocorreu um erro ao buscar o pedido.\"\r\n}\r\n```",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "O **ID (GUID)** do pedido a ser consultado.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": { }
              },
              "application/json": {
                "schema": { }
              },
              "text/json": {
                "schema": { }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Order"
        ],
        "summary": "Atualiza um pedido existente para o tenant autenticado.",
        "description": "Este endpoint permite atualizar um pedido existente do tenant. A autenticação com a role **Tenant** é obrigatória.\r\n            \r\n**Exemplo de Requisição:**\r\n```json\r\n{\r\n  \"status\": \"Completed\",\r\n  \"deliveryNotes\": \"Pedido entregue ao cliente.\"\r\n}\r\n```\r\n            \r\n**Exemplo de Resposta de Sucesso (Status 204 No Content):**\r\n```\r\n(Sem corpo de resposta, apenas status 204)\r\n```\r\n            \r\n**Exemplo de Erro (Status 401 Unauthorized):**\r\n```\r\n(Sem corpo de resposta, apenas status 401)\r\n```\r\n            \r\n**Exemplo de Erro (Status 400 Bad Request):**\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7231#section-6.5.1](https://tools.ietf.org/html/rfc7231#section-6.5.1)\",\r\n  \"title\": \"One or more validation errors occurred.\",\r\n  \"status\": 400,\r\n  \"errors\": {\r\n    \"Status\": [\r\n      \"O status fornecido é inválido.\"\r\n    ]\r\n  }\r\n}\r\n```\r\n            \r\n**Exemplo de Erro (Status 404 Not Found):**\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7231#section-6.5.4](https://tools.ietf.org/html/rfc7231#section-6.5.4)\",\r\n  \"title\": \"Not Found\",\r\n  \"status\": 404,\r\n  \"detail\": \"Pedido com ID '99999999-9999-9999-9999-999999999999' não encontrado para atualização.\"\r\n}\r\n```\r\n            \r\n**Exemplo de Erro (Status 500 Internal Server Error):**\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7231#section-6.6.1](https://tools.ietf.org/html/rfc7231#section-6.6.1)\",\r\n  \"title\": \"Internal Server Error\",\r\n  \"status\": 500,\r\n  \"detail\": \"Ocorreu um erro inesperado ao atualizar o pedido.\"\r\n}\r\n```",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "O **ID (GUID)** do pedido a ser atualizado.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Dados para a atualização do pedido (Hephaestus.Application.DTOs.Request.UpdateOrderRequest).",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOrderRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOrderRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOrderRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/order/customer/status": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "Obtém o status dos pedidos de um cliente específico.",
        "description": "Este endpoint permite que um tenant consulte o status atual de todos os pedidos associados a um determinado número de telefone de cliente.\r\nRequer autenticação com a role **Tenant**.\r\n            \r\n**Exemplo de Resposta de Sucesso (Status 200 OK):**\r\n```json\r\n[\r\n  {\r\n    \"orderId\": \"e4f5g6h7-i8j9-0k1l-2m3n-4o5p6q7r8s9t\",\r\n    \"status\": \"Processing\",\r\n    \"lastUpdate\": \"2024-07-14T10:30:00Z\"\r\n  },\r\n  {\r\n    \"orderId\": \"f1e2d3c4-b5a6-9876-5432-10fedcba9876\",\r\n    \"status\": \"Pending\",\r\n    \"lastUpdate\": \"2024-07-14T11:00:00Z\"\r\n  }\r\n]\r\n```\r\n            \r\n**Exemplo de Erro (Status 401 Unauthorized):**\r\n```\r\n(Sem corpo de resposta, apenas status 401)\r\n```\r\n            \r\n**Exemplo de Erro (Status 400 Bad Request):**\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7231#section-6.5.1](https://tools.ietf.org/html/rfc7231#section-6.5.1)\",\r\n  \"title\": \"One or more validation errors occurred.\",\r\n  \"status\": 400,\r\n  \"errors\": {\r\n    \"CustomerPhoneNumber\": [\r\n      \"O número de telefone do cliente é inválido.\"\r\n    ]\r\n  }\r\n}\r\n```\r\n            \r\n**Exemplo de Erro (Status 500 Internal Server Error):**\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7231#section-6.6.1](https://tools.ietf.org/html/rfc7231#section-6.6.1)\",\r\n  \"title\": \"Internal Server Error\",\r\n  \"status\": 500,\r\n  \"detail\": \"Ocorreu um erro ao obter o status dos pedidos do cliente.\"\r\n}\r\n```",
        "parameters": [
          {
            "name": "customerPhoneNumber",
            "in": "query",
            "description": "O número de telefone do cliente para o qual consultar o status dos pedidos.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": { }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": { }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/payment": {
      "post": {
        "tags": [
          "Payment"
        ],
        "summary": "Processes a new payment for the authenticated tenant.",
        "description": "This endpoint allows a tenant to initiate and process a payment transaction.\r\nIt requires authentication with the **Tenant** role.\r\n            \r\n**Example Request:**\r\n```json\r\n{\r\n  \"orderId\": \"e4f5g6h7-i8j9-0k1l-2m3n-4o5p6q7r8s9t\",\r\n  \"amount\": 120.50,\r\n  \"currency\": \"BRL\",\r\n  \"paymentMethod\": \"CreditCard\",\r\n  \"cardDetails\": {\r\n    \"cardNumber\": \"4111222233334444\",\r\n    \"expirationMonth\": \"12\",\r\n    \"expirationYear\": \"2027\",\r\n    \"cvv\": \"123\",\r\n    \"cardHolderName\": \"JOAO DA SILVA\"\r\n  },\r\n  \"customerName\": \"João da Silva\",\r\n  \"customerEmail\": \"joao.silva@example.com\"\r\n}\r\n```\r\n            \r\n**Example Success Response (Status 201 Created):**\r\n```json\r\n{\r\n  \"transactionId\": \"txn_abcdef1234567890\",\r\n  \"status\": \"Approved\",\r\n  \"amount\": 120.50,\r\n  \"currency\": \"BRL\",\r\n  \"orderId\": \"e4f5g6h7-i8j9-0k1l-2m3n-4o5p6q7r8s9t\",\r\n  \"timestamp\": \"2024-07-14T13:00:00Z\",\r\n  \"message\": \"Pagamento aprovado com sucesso.\"\r\n}\r\n```\r\n            \r\n**Example Validation Error (Status 400 Bad Request):**\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7231#section-6.5.1](https://tools.ietf.org/html/rfc7231#section-6.5.1)\",\r\n  \"title\": \"One or more validation errors occurred.\",\r\n  \"status\": 400,\r\n  \"errors\": {\r\n    \"Amount\": [\r\n      \"O valor do pagamento deve ser maior que zero.\"\r\n    ],\r\n    \"CardDetails.CardNumber\": [\r\n      \"Número do cartão inválido.\"\r\n    ]\r\n  }\r\n}\r\n```\r\n            \r\n**Example Unauthorized (Status 401 Unauthorized):**\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7235#section-3.1](https://tools.ietf.org/html/rfc7235#section-3.1)\",\r\n  \"title\": \"Unauthorized\",\r\n  \"status\": 401,\r\n  \"detail\": \"TenantId não encontrado no token.\"\r\n}\r\n```\r\n            \r\n**Example Not Found (Status 404 Not Found):**\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7231#section-6.5.4](https://tools.ietf.org/html/rfc7231#section-6.5.4)\",\r\n  \"title\": \"Not Found\",\r\n  \"status\": 404,\r\n  \"detail\": \"Pedido com ID '99999999-9999-9999-9999-999999999999' não encontrado.\"\r\n}\r\n```\r\n            \r\n**Example Conflict (Status 409 Conflict):**\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7231#section-6.5.8](https://tools.ietf.org/html/rfc7231#section-6.5.8)\",\r\n  \"title\": \"Conflict\",\r\n  \"status\": 409,\r\n  \"detail\": \"Este pedido já possui um pagamento registrado ou está em um status que impede novo pagamento.\"\r\n}\r\n```\r\n            \r\n**Example Internal Server Error (Status 500 Internal Server Error):**\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7231#section-6.6.1](https://tools.ietf.org/html/rfc7231#section-6.6.1)\",\r\n  \"title\": \"Internal Server Error\",\r\n  \"status\": 500,\r\n  \"detail\": \"Ocorreu um erro inesperado ao processar o pagamento.\"\r\n}\r\n```",
        "requestBody": {
          "description": "The payment request details (Hephaestus.Domain.DTOs.Request.PaymentRequest).",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Promotion": {
      "post": {
        "tags": [
          "Promotion"
        ],
        "summary": "Cria uma nova promoção para o tenant autenticado.",
        "description": "Este endpoint permite que um tenant registre uma nova promoção em seu catálogo.\r\nRequer autenticação com a role **Tenant**.\r\n            \r\n**Exemplo de Corpo da Requisição:**\r\n```json\r\n{\r\n  \"name\": \"Desconto de 10% no Verão\",\r\n  \"description\": \"10% de desconto em todos os pedidos acima de R$50 durante o verão.\",\r\n  \"discountType\": \"Percentage\",\r\n  \"discountValue\": 10.00,\r\n  \"menuItemId\": null,\r\n  \"minOrderValue\": 50.00,\r\n  \"maxUsagePerCustomer\": 1,\r\n  \"maxTotalUses\": 100,\r\n  \"applicableToTags\": [\"pizza\", \"lanche\"],\r\n  \"startDate\": \"2025-07-12T00:00:00Z\",\r\n  \"endDate\": \"2025-12-31T23:59:59Z\",\r\n  \"isActive\": true,\r\n  \"imageUrl\": \"[https://exemplo.com/promocao-verao.jpg](https://exemplo.com/promocao-verao.jpg)\"\r\n}\r\n```\r\n            \r\n**Exemplo de Resposta de Sucesso (Status 201 Created):**\r\n```json\r\n{\r\n  \"id\": \"123e4567-e89b-12d3-a456-426614174001\"\r\n}\r\n```\r\n            \r\n**Exemplo de Erro de Validação (Status 400 Bad Request):**\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7231#section-6.5.1](https://tools.ietf.org/html/rfc7231#section-6.5.1)\",\r\n  \"title\": \"One or more validation errors occurred.\",\r\n  \"status\": 400,\r\n  \"errors\": {\r\n    \"Name\": [\r\n      \"O campo 'Name' é obrigatório.\"\r\n    ],\r\n    \"DiscountValue\": [\r\n      \"O valor do desconto deve ser positivo.\"\r\n    ]\r\n  }\r\n}\r\n```\r\n            \r\n**Exemplo de Erro de Autorização (Status 401 Unauthorized):**\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7235#section-3.1](https://tools.ietf.org/html/rfc7235#section-3.1)\",\r\n  \"title\": \"Unauthorized\",\r\n  \"status\": 401,\r\n  \"detail\": \"TenantId não encontrado no token.\"\r\n}\r\n```\r\n            \r\n**Exemplo de Erro Interno do Servidor (Status 500 Internal Server Error):**\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7231#section-6.6.1](https://tools.ietf.org/html/rfc7231#section-6.6.1)\",\r\n  \"title\": \"Internal Server Error\",\r\n  \"status\": 500,\r\n  \"detail\": \"Ocorreu um erro inesperado ao criar a promoção.\"\r\n}\r\n```",
        "requestBody": {
          "description": "Dados da promoção a ser criada (Hephaestus.Application.DTOs.Request.CreatePromotionRequest).",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePromotionRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePromotionRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePromotionRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": { }
              },
              "application/json": {
                "schema": { }
              },
              "text/json": {
                "schema": { }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Promotion"
        ],
        "summary": "Lista as promoções do tenant autenticado.",
        "description": "Este endpoint retorna uma lista de promoções registradas para o tenant.\r\nÉ possível filtrar as promoções por status de ativação (`isActive`).\r\nRequer autenticação com a role **Tenant**.\r\n            \r\n**Exemplo de Requisição:**\r\n```http\r\nGET /api/Promotion?isActive=true\r\n```\r\n            \r\n**Exemplo de Resposta de Sucesso (Status 200 OK):**\r\n```json\r\n[\r\n  {\r\n    \"id\": \"123e4567-e89b-12d3-a456-426614174001\",\r\n    \"tenantId\": \"456e7890-e89b-12d3-a456-426614174002\",\r\n    \"name\": \"Desconto de 10% no Verão\",\r\n    \"description\": \"10% de desconto em todos os pedidos.\",\r\n    \"discountType\": \"Percentage\",\r\n    \"discountValue\": 10.00,\r\n    \"menuItemId\": null,\r\n    \"minOrderValue\": 50.00,\r\n    \"maxUsagePerCustomer\": 1,\r\n    \"maxTotalUses\": 100,\r\n    \"applicableToTags\": [\"pizza\", \"lanche\"],\r\n    \"startDate\": \"2025-07-12T00:00:00Z\",\r\n    \"endDate\": \"2025-12-31T23:59:59Z\",\r\n    \"isActive\": true,\r\n    \"imageUrl\": \"[https://exemplo.com/promocao-verao.jpg](https://exemplo.com/promocao-verao.jpg)\"\r\n  },\r\n  {\r\n    \"id\": \"a1b2c3d4-e5f6-7890-1234-567890abcdef\",\r\n    \"tenantId\": \"456e7890-e89b-12d3-a456-426614174002\",\r\n    \"name\": \"Frete Grátis para Novos Clientes\",\r\n    \"description\": \"Frete grátis na primeira compra.\",\r\n    \"discountType\": \"FreeShipping\",\r\n    \"discountValue\": 0.00,\r\n    \"menuItemId\": null,\r\n    \"minOrderValue\": 30.00,\r\n    \"maxUsagePerCustomer\": 1,\r\n    \"maxTotalUses\": 50,\r\n    \"applicableToTags\": [],\r\n    \"startDate\": \"2025-07-01T00:00:00Z\",\r\n    \"endDate\": \"2025-08-31T23:59:59Z\",\r\n    \"isActive\": true,\r\n    \"imageUrl\": null\r\n  }\r\n]\r\n```\r\n            \r\n**Exemplo de Erro de Autorização (Status 401 Unauthorized):**\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7235#section-3.1](https://tools.ietf.org/html/rfc7235#section-3.1)\",\r\n  \"title\": \"Unauthorized\",\r\n  \"status\": 401,\r\n  \"detail\": \"TenantId não encontrado no token.\"\r\n}\r\n```\r\n            \r\n**Exemplo de Erro Interno do Servidor (Status 500 Internal Server Error):**\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7231#section-6.6.1](https://tools.ietf.org/html/rfc7231#section-6.6.1)\",\r\n  \"title\": \"Internal Server Error\",\r\n  \"status\": 500,\r\n  \"detail\": \"Ocorreu um erro inesperado ao listar as promoções.\"\r\n}\r\n```",
        "parameters": [
          {
            "name": "isActive",
            "in": "query",
            "description": "Filtro opcional: `true` para promoções ativas, `false` para inativas. Se omitido, retorna todas as promoções.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PromotionResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PromotionResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PromotionResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Promotion/{id}": {
      "get": {
        "tags": [
          "Promotion"
        ],
        "summary": "Obtém os detalhes de uma promoção específica por ID.",
        "description": "Este endpoint retorna todas as informações de uma promoção, desde que a promoção pertença ao tenant autenticado.\r\nRequer autenticação com a role **Tenant**.\r\n            \r\n**Exemplo de Requisição:**\r\n```http\r\nGET /api/Promotion/123e4567-e89b-12d3-a456-426614174001\r\n```\r\n            \r\n**Exemplo de Resposta de Sucesso (Status 200 OK):**\r\n```json\r\n{\r\n  \"id\": \"123e4567-e89b-12d3-a456-426614174001\",\r\n  \"tenantId\": \"456e7890-e89b-12d3-a456-426614174002\",\r\n  \"name\": \"Desconto de 10% no Verão\",\r\n  \"description\": \"10% de desconto em todos os pedidos acima de R$50 durante o verão.\",\r\n  \"discountType\": \"Percentage\",\r\n  \"discountValue\": 10.00,\r\n  \"menuItemId\": null,\r\n  \"minOrderValue\": 50.00,\r\n  \"maxUsagePerCustomer\": 1,\r\n  \"maxTotalUses\": 100,\r\n  \"applicableToTags\": [\"pizza\", \"lanche\"],\r\n  \"startDate\": \"2025-07-12T00:00:00Z\",\r\n  \"endDate\": \"2025-12-31T23:59:59Z\",\r\n  \"isActive\": true,\r\n  \"imageUrl\": \"[https://exemplo.com/promocao-verao.jpg](https://exemplo.com/promocao-verao.jpg)\"\r\n}\r\n```\r\n            \r\n**Exemplo de Erro (Status 400 Bad Request):**\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7231#section-6.5.1](https://tools.ietf.org/html/rfc7231#section-6.5.1)\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"O ID da promoção 'invalido-id' não é um GUID válido.\"\r\n}\r\n```\r\n            \r\n**Exemplo de Erro (Status 404 Not Found):**\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7231#section-6.5.4](https://tools.ietf.org/html/rfc7231#section-6.5.4)\",\r\n  \"title\": \"Not Found\",\r\n  \"status\": 404,\r\n  \"detail\": \"Promoção com ID '99999999-9999-9999-9999-999999999999' não encontrada para o tenant.\"\r\n}\r\n```\r\n            \r\n**Exemplo de Erro de Autorização (Status 401 Unauthorized):**\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7235#section-3.1](https://tools.ietf.org/html/rfc7235#section-3.1)\",\r\n  \"title\": \"Unauthorized\",\r\n  \"status\": 401,\r\n  \"detail\": \"TenantId não encontrado no token.\"\r\n}\r\n```",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "O **ID (GUID)** da promoção a ser consultada.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Promotion"
        ],
        "summary": "Atualiza uma promoção existente para o tenant autenticado.",
        "description": "Este endpoint permite que um tenant atualize os dados de uma promoção existente.\r\nRequer autenticação com a role **Tenant**.\r\n            \r\n**Exemplo de Corpo da Requisição:**\r\n```json\r\n{\r\n  \"id\": \"123e4567-e89b-12d3-a456-426614174001\",\r\n  \"name\": \"Desconto de 15% no Verão\",\r\n  \"description\": \"15% de desconto em todos os pedidos acima de R$60 durante o verão.\",\r\n  \"discountType\": \"Percentage\",\r\n  \"discountValue\": 15.00,\r\n  \"menuItemId\": null,\r\n  \"minOrderValue\": 60.00,\r\n  \"maxUsagePerCustomer\": 2,\r\n  \"maxTotalUses\": 150,\r\n  \"applicableToTags\": [\"pizza\", \"lanche\", \"bebidas\"],\r\n  \"startDate\": \"2025-07-12T00:00:00Z\",\r\n  \"endDate\": \"2025-12-31T23:59:59Z\",\r\n  \"isActive\": true,\r\n  \"imageUrl\": \"[https://exemplo.com/promocao-verao-atualizada.jpg](https://exemplo.com/promocao-verao-atualizada.jpg)\"\r\n}\r\n```\r\n            \r\n**Exemplo de Resposta de Sucesso (Status 204 No Content):**\r\n```\r\n(Nenhum corpo de resposta, apenas status 204)\r\n```\r\n            \r\n**Exemplo de Erro de Validação (Status 400 Bad Request):**\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7231#section-6.5.1](https://tools.ietf.org/html/rfc7231#section-6.5.1)\",\r\n  \"title\": \"One or more validation errors occurred.\",\r\n  \"status\": 400,\r\n  \"errors\": {\r\n    \"Name\": [\r\n      \"O campo 'Name' é obrigatório.\"\r\n    ],\r\n    \"DiscountValue\": [\r\n      \"O valor do desconto deve ser positivo.\"\r\n    ]\r\n  }\r\n}\r\n```\r\n            \r\n**Exemplo de Erro (Status 404 Not Found):**\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7231#section-6.5.4](https://tools.ietf.org/html/rfc7231#section-6.5.4)\",\r\n  \"title\": \"Not Found\",\r\n  \"status\": 404,\r\n  \"detail\": \"Promoção com ID '99999999-9999-9999-9999-999999999999' não encontrada para o tenant.\"\r\n}\r\n```\r\n            \r\n**Exemplo de Erro de Autorização (Status 401 Unauthorized):**\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7235#section-3.1](https://tools.ietf.org/html/rfc7235#section-3.1)\",\r\n  \"title\": \"Unauthorized\",\r\n  \"status\": 401,\r\n  \"detail\": \"TenantId não encontrado no token.\"\r\n}\r\n```",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "O **ID (GUID)** da promoção a ser atualizada.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Dados atualizados da promoção (Hephaestus.Application.DTOs.Request.UpdatePromotionRequest).",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePromotionRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePromotionRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePromotionRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Promotion"
        ],
        "summary": "Remove uma promoção do tenant autenticado.",
        "description": "Este endpoint permite que um tenant remova uma promoção existente.\r\nRequer autenticação com a role **Tenant**.\r\n            \r\n**Exemplo de Requisição:**\r\n```http\r\nDELETE /api/Promotion/123e4567-e89b-12d3-a456-426614174001\r\n```\r\n            \r\n**Exemplo de Resposta de Sucesso (Status 204 No Content):**\r\n```\r\n(Nenhum corpo de resposta, apenas status 204)\r\n```\r\n            \r\n**Exemplo de Erro (Status 400 Bad Request):**\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7231#section-6.5.1](https://tools.ietf.org/html/rfc7231#section-6.5.1)\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"O ID da promoção 'invalido-id' não é um GUID válido.\"\r\n}\r\n```\r\n            \r\n**Exemplo de Erro (Status 404 Not Found):**\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7231#section-6.5.4](https://tools.ietf.org/html/rfc7231#section-6.5.4)\",\r\n  \"title\": \"Not Found\",\r\n  \"status\": 404,\r\n  \"detail\": \"Promoção com ID '99999999-9999-9999-9999-999999999999' não encontrada para o tenant.\"\r\n}\r\n```\r\n            \r\n**Exemplo de Erro de Autorização (Status 401 Unauthorized):**\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7235#section-3.1](https://tools.ietf.org/html/rfc7235#section-3.1)\",\r\n  \"title\": \"Unauthorized\",\r\n  \"status\": 401,\r\n  \"detail\": \"TenantId não encontrado no token.\"\r\n}\r\n```",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "O **ID (GUID)** da promoção a ser removida.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Promotion/notify": {
      "post": {
        "tags": [
          "Promotion"
        ],
        "summary": "Envia notificação de uma promoção via WhatsApp.",
        "description": "Este endpoint permite que um tenant envie notificações de promoções para seus clientes via WhatsApp.\r\nRequer autenticação com a role **Tenant**.\r\n            \r\n**Exemplo de Corpo da Requisição:**\r\n```json\r\n{\r\n  \"promotionId\": \"123e4567-e89b-12d3-a456-426614174001\",\r\n  \"messageTemplate\": \"🎉 Promoção especial! {promotionName} - {promotionDescription} Válida até {endDate}. Aproveite!\",\r\n  \"customerPhoneNumbers\": [\"11987654321\", \"21987654321\"]\r\n}\r\n```\r\n            \r\n**Exemplo de Resposta de Sucesso (Status 204 No Content):**\r\n```\r\n(Nenhum corpo de resposta, apenas status 204)\r\n```\r\n            \r\n**Exemplo de Erro de Validação (Status 400 Bad Request):**\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7231#section-6.5.1](https://tools.ietf.org/html/rfc7231#section-6.5.1)\",\r\n  \"title\": \"One or more validation errors occurred.\",\r\n  \"status\": 400,\r\n  \"errors\": {\r\n    \"PromotionId\": [\r\n      \"O ID da promoção é obrigatório.\"\r\n    ],\r\n    \"MessageTemplate\": [\r\n      \"O template da mensagem é obrigatório.\"\r\n    ]\r\n  }\r\n}\r\n```\r\n            \r\n**Exemplo de Erro (Status 404 Not Found):**\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7231#section-6.5.4](https://tools.ietf.org/html/rfc7231#section-6.5.4)\",\r\n  \"title\": \"Not Found\",\r\n  \"status\": 404,\r\n  \"detail\": \"Promoção com ID '99999999-9999-9999-9999-999999999999' não encontrada para o tenant.\"\r\n}\r\n```\r\n            \r\n**Exemplo de Erro de Autorização (Status 401 Unauthorized):**\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7235#section-3.1](https://tools.ietf.org/html/rfc7235#section-3.1)\",\r\n  \"title\": \"Unauthorized\",\r\n  \"status\": 401,\r\n  \"detail\": \"TenantId não encontrado no token.\"\r\n}\r\n```",
        "requestBody": {
          "description": "Dados da notificação (Hephaestus.Application.DTOs.Request.NotifyPromotionRequest).",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotifyPromotionRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NotifyPromotionRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NotifyPromotionRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Tag": {
      "post": {
        "tags": [
          "Tag"
        ],
        "summary": "Cria uma nova tag para o tenant autenticado.",
        "description": "Este endpoint permite que um **Administrador** ou um **Tenant** crie uma nova tag,\r\nque pode ser associada a itens do cardápio para categorização.\r\n            \r\n**Exemplo de Corpo da Requisição:**\r\n```json\r\n{\r\n  \"name\": \"Vegetariano\"\r\n}\r\n```\r\n            \r\n**Exemplo de Resposta de Sucesso (Status 200 OK):**\r\n```json\r\n{\r\n  \"id\": \"123e4567-e89b-12d3-a456-426614174001\",\r\n  \"tenantId\": \"456e7890-e89b-12d3-a456-426614174002\",\r\n  \"name\": \"Vegetariano\"\r\n}\r\n```\r\n            \r\n**Exemplo de Erro de Validação (Status 400 Bad Request):**\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7231#section-6.5.1](https://tools.ietf.org/html/rfc7231#section-6.5.1)\",\r\n  \"title\": \"One or more validation errors occurred.\",\r\n  \"status\": 400,\r\n  \"errors\": {\r\n    \"Name\": [\r\n      \"O campo 'Name' é obrigatório e deve ter entre 3 e 50 caracteres.\"\r\n    ]\r\n  }\r\n}\r\n```\r\n            \r\n**Exemplo de Erro de Conflito (Status 409 Conflict):**\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7231#section-6.5.8](https://tools.ietf.org/html/rfc7231#section-6.5.8)\",\r\n  \"title\": \"Conflict\",\r\n  \"status\": 409,\r\n  \"detail\": \"A tag com o nome 'Vegetariano' já está registrada para este tenant.\"\r\n}\r\n```\r\n            \r\n**Exemplo de Erro de Autorização (Status 401 Unauthorized):**\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7235#section-3.1](https://tools.ietf.org/html/rfc7235#section-3.1)\",\r\n  \"title\": \"Unauthorized\",\r\n  \"status\": 401,\r\n  \"detail\": \"TenantId não encontrado no token de autenticação ou token inválido.\"\r\n}\r\n```\r\n            \r\n**Exemplo de Erro Interno do Servidor (Status 500 Internal Server Error):**\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7231#section-6.6.1](https://tools.ietf.org/html/rfc7231#section-6.6.1)\",\r\n  \"title\": \"Internal Server Error\",\r\n  \"status\": 500,\r\n  \"detail\": \"Ocorreu um erro inesperado ao criar a tag.\"\r\n}\r\n```",
        "requestBody": {
          "description": "Dados da tag a ser criada (Hephaestus.Application.DTOs.Request.TagRequest).",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TagRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TagRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TagResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Tag"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TagResponsePagedResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagResponsePagedResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagResponsePagedResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Tag/{id}": {
      "delete": {
        "tags": [
          "Tag"
        ],
        "summary": "Exclui uma tag existente.",
        "description": "Este endpoint permite que um **Administrador** ou um **Tenant** remova uma tag\r\ndo sistema. A tag só pode ser excluída se não estiver associada a nenhum item de cardápio.\r\n            \r\n**Exemplo de Requisição:**\r\n```http\r\nDELETE /api/Tag/123e4567-e89b-12d3-a456-426614174001\r\n```\r\n            \r\n**Exemplo de Resposta de Sucesso (Status 204 No Content):**\r\n```\r\n(Nenhum corpo de resposta)\r\n```\r\n            \r\n**Exemplo de Erro de Requisição Inválida (Status 400 Bad Request):**\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7231#section-6.5.1](https://tools.ietf.org/html/rfc7231#section-6.5.1)\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"O ID da tag 'abc-123' não é um GUID válido.\"\r\n}\r\n```\r\n            \r\n**Exemplo de Erro de Autorização (Status 401 Unauthorized):**\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7235#section-3.1](https://tools.ietf.org/html/rfc7235#section-3.1)\",\r\n  \"title\": \"Unauthorized\",\r\n  \"status\": 401,\r\n  \"detail\": \"TenantId não encontrado no token de autenticação ou token inválido.\"\r\n}\r\n```\r\n            \r\n**Exemplo de Erro Não Encontrado (Status 404 Not Found):**\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7231#section-6.5.4](https://tools.ietf.org/html/rfc7231#section-6.5.4)\",\r\n  \"title\": \"Not Found\",\r\n  \"status\": 404,\r\n  \"detail\": \"Tag com ID '99999999-9999-9999-9999-999999999999' não encontrada ou não pertence a este tenant.\"\r\n}\r\n```\r\n            \r\n**Exemplo de Erro de Conflito (Status 409 Conflict):**\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7231#section-6.5.8](https://tools.ietf.org/html/rfc7231#section-6.5.8)\",\r\n  \"title\": \"Conflict\",\r\n  \"status\": 409,\r\n  \"detail\": \"A tag 'Vegetariano' não pode ser excluída pois está associada a um ou mais itens de cardápio.\"\r\n}\r\n```\r\n            \r\n**Exemplo de Erro Interno do Servidor (Status 500 Internal Server Error):**\r\n```json\r\n{\r\n  \"type\": \"[https://tools.ietf.org/html/rfc7231#section-6.6.1](https://tools.ietf.org/html/rfc7231#section-6.6.1)\",\r\n  \"title\": \"Internal Server Error\",\r\n  \"status\": 500,\r\n  \"detail\": \"Ocorreu um erro inesperado ao excluir a tag.\"\r\n}\r\n```",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "O **ID (GUID)** da tag a ser excluída.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AdditionalResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "tenantId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "AuditLogResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "action": {
            "type": "string",
            "nullable": true
          },
          "entityId": {
            "type": "string",
            "nullable": true
          },
          "details": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "CompanyImageResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "imageType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyOperatingHourResponse": {
        "type": "object",
        "properties": {
          "dayOfWeek": {
            "type": "string",
            "nullable": true
          },
          "openTime": {
            "type": "string",
            "nullable": true
          },
          "closeTime": {
            "type": "string",
            "nullable": true
          },
          "isClosed": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CompanyProfileResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "neighborhood": {
            "type": "string",
            "nullable": true
          },
          "street": {
            "type": "string",
            "nullable": true
          },
          "number": {
            "type": "string",
            "nullable": true
          },
          "latitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "longitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "slogan": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "images": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyImageResponse"
            },
            "nullable": true
          },
          "operatingHours": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyOperatingHourResponse"
            },
            "nullable": true
          },
          "socialMedia": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanySocialMediaResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "isEnabled": {
            "type": "boolean"
          },
          "feeType": {
            "type": "string",
            "nullable": true
          },
          "feeValue": {
            "type": "number",
            "format": "double"
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "neighborhood": {
            "type": "string",
            "nullable": true
          },
          "street": {
            "type": "string",
            "nullable": true
          },
          "number": {
            "type": "string",
            "nullable": true
          },
          "latitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "longitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "slogan": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompanyResponsePagedResult": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyResponse"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CompanySocialMediaResponse": {
        "type": "object",
        "properties": {
          "platform": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CouponResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "customerPhoneNumber": {
            "type": "string",
            "nullable": true
          },
          "discountType": {
            "type": "string",
            "nullable": true
          },
          "discountValue": {
            "type": "number",
            "format": "double"
          },
          "menuItemId": {
            "type": "string",
            "nullable": true
          },
          "minOrderValue": {
            "type": "number",
            "format": "double"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CreateAdditionalRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "CreateCouponRequest": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "customerPhoneNumber": {
            "type": "string",
            "nullable": true
          },
          "discountType": {
            "type": "string",
            "nullable": true
          },
          "discountValue": {
            "type": "number",
            "format": "double"
          },
          "menuItemId": {
            "type": "string",
            "nullable": true
          },
          "minOrderValue": {
            "type": "number",
            "format": "double"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "CreateMenuItemRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "categoryId": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "isAvailable": {
            "type": "boolean"
          },
          "tagIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "availableAdditionalIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateOrderRequest": {
        "type": "object",
        "properties": {
          "customerPhoneNumber": {
            "type": "string",
            "nullable": true
          },
          "couponId": {
            "type": "string",
            "nullable": true
          },
          "promotionId": {
            "type": "string",
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItemRequest"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreatePromotionRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "discountType": {
            "type": "string",
            "nullable": true
          },
          "discountValue": {
            "type": "number",
            "format": "double"
          },
          "menuItemId": {
            "type": "string",
            "nullable": true
          },
          "minOrderValue": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "maxUsagePerCustomer": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "maxTotalUses": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "applicableToTags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "isActive": {
            "type": "boolean"
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomerRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "street": {
            "type": "string",
            "nullable": true
          },
          "number": {
            "type": "string",
            "nullable": true
          },
          "latitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "longitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomerResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "tenantId": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "street": {
            "type": "string",
            "nullable": true
          },
          "number": {
            "type": "string",
            "nullable": true
          },
          "latitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "longitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "CustomerResponsePagedResult": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerResponse"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Customization": {
        "type": "object",
        "properties": {
          "additionalId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "ExecuteQueryRequest": {
        "type": "object",
        "properties": {
          "query": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExecuteQueryResponse": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": { }
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FeeType": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "LoggedUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "role": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MenuItemResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "tenantId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "categoryId": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "isAvailable": {
            "type": "boolean"
          },
          "tagIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "availableAdditionalIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MenuItemResponsePagedResult": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MenuItemResponse"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MfaRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "mfaCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NotifyPromotionRequest": {
        "type": "object",
        "properties": {
          "promotionId": {
            "type": "string",
            "nullable": true
          },
          "messageTemplate": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OpenAIRequest": {
        "type": "object",
        "properties": {
          "prompt": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "string",
            "nullable": true
          },
          "responseFormat": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OpenAIResponse": {
        "type": "object",
        "properties": {
          "responseJson": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderItemRequest": {
        "type": "object",
        "properties": {
          "menuItemId": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "additionalIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "customizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Customization"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderStatus": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "PaymentRequest": {
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentResponse": {
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string",
            "nullable": true
          },
          "totalAmount": {
            "type": "number",
            "format": "double"
          },
          "platformFee": {
            "type": "number",
            "format": "double"
          },
          "paymentStatus": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentStatus": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "PromotionResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "tenantId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "discountType": {
            "type": "string",
            "nullable": true
          },
          "discountValue": {
            "type": "number",
            "format": "double"
          },
          "menuItemId": {
            "type": "string",
            "nullable": true
          },
          "minOrderValue": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "maxUsagePerCustomer": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "maxTotalUses": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "applicableToTags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "isActive": {
            "type": "boolean"
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RegisterCompanyRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "apiKey": {
            "type": "string",
            "nullable": true
          },
          "feeType": {
            "$ref": "#/components/schemas/FeeType"
          },
          "feeValue": {
            "type": "number",
            "format": "double"
          },
          "isEnabled": {
            "type": "boolean"
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "neighborhood": {
            "type": "string",
            "nullable": true
          },
          "street": {
            "type": "string",
            "nullable": true
          },
          "number": {
            "type": "string",
            "nullable": true
          },
          "latitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "longitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "slogan": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResetPasswordConfirmRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "resetToken": {
            "type": "string",
            "nullable": true
          },
          "newPassword": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResetPasswordRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SalesByTenantResponse": {
        "type": "object",
        "properties": {
          "tenantId": {
            "type": "string",
            "nullable": true
          },
          "totalAmount": {
            "type": "number",
            "format": "double"
          },
          "platformFee": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "SalesReportResponse": {
        "type": "object",
        "properties": {
          "totalSales": {
            "type": "number",
            "format": "double"
          },
          "totalPlatformFees": {
            "type": "number",
            "format": "double"
          },
          "salesByTenant": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SalesByTenantResponse"
            },
            "nullable": true
          },
          "totalPromotionsApplied": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "TagRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TagResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "tenantId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TagResponsePagedResult": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagResponse"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UpdateAdditionalRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateCompanyRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "apiKey": {
            "type": "string",
            "nullable": true
          },
          "feeType": {
            "type": "string",
            "nullable": true
          },
          "feeValue": {
            "type": "number",
            "format": "double"
          },
          "isEnabled": {
            "type": "boolean"
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "neighborhood": {
            "type": "string",
            "nullable": true
          },
          "street": {
            "type": "string",
            "nullable": true
          },
          "number": {
            "type": "string",
            "nullable": true
          },
          "latitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "longitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "slogan": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateCouponRequest": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "customerPhoneNumber": {
            "type": "string",
            "nullable": true
          },
          "discountType": {
            "type": "string",
            "nullable": true
          },
          "discountValue": {
            "type": "number",
            "format": "double"
          },
          "menuItemId": {
            "type": "string",
            "nullable": true
          },
          "minOrderValue": {
            "type": "number",
            "format": "double"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UpdateMenuItemRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "categoryId": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "isAvailable": {
            "type": "boolean",
            "nullable": true
          },
          "tagIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "availableAdditionalIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateOrderRequest": {
        "type": "object",
        "properties": {
          "customerPhoneNumber": {
            "type": "string",
            "nullable": true
          },
          "couponId": {
            "type": "string",
            "nullable": true
          },
          "promotionId": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/OrderStatus"
          },
          "paymentStatus": {
            "$ref": "#/components/schemas/PaymentStatus"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItemRequest"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdatePromotionRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "discountType": {
            "type": "string",
            "nullable": true
          },
          "discountValue": {
            "type": "number",
            "format": "double"
          },
          "menuItemId": {
            "type": "string",
            "nullable": true
          },
          "minOrderValue": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "maxUsagePerCustomer": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "maxTotalUses": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "applicableToTags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "isActive": {
            "type": "boolean"
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ValidationProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "nullable": true
          }
        },
        "additionalProperties": { }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "JWT Authorization header usando o esquema Bearer. Exemplo: \"Bearer {token}\"",
        "scheme": "Bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ],
  "tags": [
    {
      "name": "Order",
      "description": "Controller para gerenciamento de pedidos, permitindo a criação, consulta, atualização e rastreamento de status de pedidos."
    },
    {
      "name": "Additional",
      "description": "Controller para gerenciamento de adicionais (itens extras) para um tenant.\r\nTodas as operações requerem autenticação com a role \"Tenant\"."
    },
    {
      "name": "Administration",
      "description": "Controller para gerenciamento administrativo de empresas, vendas e logs.\r\nTodas as operações requerem autenticação com a role \"Admin\" e a policy \"RequireMfa\"."
    },
    {
      "name": "Auth",
      "description": "Controller para autenticação de usuários e gerenciamento de contas, incluindo login, registro de empresas, redefinição de senha e MFA."
    },
    {
      "name": "Company",
      "description": "Controller para gerenciamento de perfis de empresas, fornecendo endpoints para consulta de dados da empresa."
    },
    {
      "name": "Coupon",
      "description": "Controller para gerenciamento de cupons, permitindo operações como criação, listagem, obtenção, atualização e exclusão de cupons."
    },
    {
      "name": "Customer",
      "description": "Controller para gerenciamento de clientes, permitindo operações como atualização, cadastro e consulta de clientes."
    },
    {
      "name": "Database",
      "description": "Controller para operações seguras de banco de dados, permitindo a execução de queries SQL de consulta."
    },
    {
      "name": "Menu",
      "description": "Controller for managing menu items within a tenant's catalog.\r\nThis includes creating, listing, retrieving, updating, and deleting menu items."
    },
    {
      "name": "OpenAI",
      "description": "Controller para integração segura com a API da OpenAI, permitindo a comunicação com modelos de chat."
    },
    {
      "name": "Payment",
      "description": "Controller for processing payments for a specific tenant."
    },
    {
      "name": "Promotion",
      "description": "Controller para gerenciamento completo de promoções de um tenant, incluindo criação, listagem,\r\nobtenção por ID, atualização, exclusão e notificação de promoções."
    },
    {
      "name": "Tag",
      "description": "Controller para gerenciamento de tags, permitindo a criação, listagem e exclusão de tags\r\nassociadas aos itens de cardápio de um tenant."
    }
  ]
}